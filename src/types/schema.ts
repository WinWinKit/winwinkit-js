/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/app-store/offer-codes/{offer_code_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Offer Code
         * @description Get an offer code with subscription and prices by the offer code id.
         */
        get: operations["getOfferCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create or Update User
         * @description Create or update a user if already exists.
         */
        post: operations["createOrUpdateUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{app_user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get User
         * @description Retrieves a user by their app user id.
         */
        get: operations["getUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{app_user_id}/rewards/withdraw-credits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Withdraw Credits
         * @description Withdraws credits from a user.
         */
        post: operations["withdrawCredits"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{app_user_id}/rewards/grant": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Grant a Reward
         * @description Grants a reward for a user. Note 1: currently only granting of credit rewards is supported. Note 2: this endpoint is only accessible with a secret API key.
         */
        post: operations["grantReward"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{app_user_id}/claim-code": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Claim Code
         * @description Claims a code for a user. Code can be affiliate, promo or referral code.
         */
        post: operations["claimCode"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Error Object */
        ErrorObject: {
            code: string;
            status: number;
            message: string;
            source: string | null;
        };
        /** @description Errors Response */
        ErrorsResponse: {
            errors: components["schemas"]["ErrorObject"][];
        };
        /** @description The price */
        AppStorePrice: {
            /**
             * @description The price territory.
             * @example USA
             */
            territory: string;
            /**
             * @description The price amount.
             * @example 99.99
             */
            price: string;
            /**
             * @description The price currency.
             * @example USD
             */
            currency: string;
        };
        /** @description The offer code */
        AppStoreOfferCode: {
            /**
             * @description The offer code id.
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description The offer code name.
             * @example Three months at 50% off
             */
            name: string;
            /**
             * @description The offer code customer eligibilities.
             * @example [
             *       "NEW",
             *       "EXISTING",
             *       "EXPIRED"
             *     ]
             */
            customer_eligibilities: string[];
            /**
             * @description The offer code offer eligibility.
             * @example STACK_WITH_INTRO_OFFERS
             * @enum {string}
             */
            offer_eligibility: "STACK_WITH_INTRO_OFFERS" | "REPLACE_INTRO_OFFERS";
            /**
             * @description The offer code duration.
             * @example THREE_MONTHS
             * @enum {string}
             */
            duration: "THREE_DAYS" | "ONE_WEEK" | "TWO_WEEKS" | "ONE_MONTH" | "TWO_MONTHS" | "THREE_MONTHS" | "SIX_MONTHS" | "ONE_YEAR";
            /**
             * @description The offer code offer mode.
             * @example PAY_AS_YOU_GO
             * @enum {string}
             */
            offer_mode: "PAY_AS_YOU_GO" | "PAY_UP_FRONT" | "FREE_TRIAL";
            /**
             * @description The offer code number of periods.
             * @example 1
             */
            number_of_periods: number;
            /** @description The offer code prices. */
            prices: components["schemas"]["AppStorePrice"][] | null;
        };
        /** @description The subscription on the App Store */
        AppStoreSubscription: {
            /**
             * @description The subscription id.
             * @example 1234567890
             */
            id: string;
            /**
             * @description The product id.
             * @example com.winwinkit.app.yearly
             */
            product_id: string;
            /**
             * @description The subscription name.
             * @example Yearly
             */
            name: string;
            /**
             * @description The subscription period.
             * @example ONE_YEAR
             * @enum {string}
             */
            subscription_period: "ONE_WEEK" | "ONE_MONTH" | "TWO_MONTHS" | "THREE_MONTHS" | "SIX_MONTHS" | "ONE_YEAR";
            /** @description The prices of the subscription. */
            prices: components["schemas"]["AppStorePrice"][];
        };
        OfferCodeResponseData: {
            /** @description The offer code */
            offer_code: components["schemas"]["AppStoreOfferCode"];
            /** @description The subscription */
            subscription: components["schemas"]["AppStoreSubscription"];
        };
        OfferCodeResponse: {
            data: components["schemas"]["OfferCodeResponseData"];
        };
        UserCreateRequest: {
            /**
             * @description The unique identifier of the referral user in your app.
             * @example 821fae4b5-1a2d-4c1e-9152-5297086a161c
             */
            app_user_id: string;
            /**
             * @description Whether the user is a trial user.
             * @example false
             */
            is_trial?: boolean | null;
            /**
             * @description Whether the user is a premium user.
             * @example false
             */
            is_premium?: boolean | null;
            /**
             * Format: date-time
             * @description The date when the user was first seen at.
             * @example 2024-11-10T10:28:18.104Z
             */
            first_seen_at?: string | null;
            /**
             * Format: date-time
             * @deprecated
             * @description The date when the user was last seen at. Deprecated and will be removed in the future.
             * @example null
             */
            last_seen_at?: string | null;
            /**
             * @description The metadata of the user.
             * @example {}
             */
            metadata?: Record<string, never>;
        };
        /** @description User's eligibility to claim referral code. */
        UserClaimCodeEligibility: {
            /**
             * @description The claim code eligibility flag.
             * @example true
             */
            eligible: boolean;
            /**
             * Format: date-time
             * @description The claim code eligibility until date.
             * @example 2024-11-10T10:28:18.104Z
             */
            eligible_until: string | null;
        };
        /** @description The referred by of the user. */
        UserReferredBy: {
            /**
             * @description The code claimed by the user. Can be null if the code's entity has been deleted.
             * @example XYZ123
             */
            code: string | null;
            /**
             * @description The type of the code. Can be one of "affiliate", "promo", or "referral".
             * @example referral
             * @enum {string}
             */
            type: "affiliate" | "promo" | "referral";
        };
        /** @description The stats of the user. */
        UserStats: {
            /**
             * @description The number of users who have claimed the referral code.
             * @example 0
             */
            claims: number;
            /**
             * @description The number of users who have converted to premium.
             * @example 0
             */
            conversions: number;
            /**
             * @description The number of users who have churned.
             * @example 0
             */
            churns: number;
        };
        BasicReward: {
            /**
             * @description The key of the reward
             * @example basic-reward
             */
            key: string;
            /**
             * @description The name of the reward
             * @example Basic Reward
             */
            name: string;
            /**
             * @description The description of the reward
             * @example This is a basic reward
             */
            description: string | null;
            /**
             * @description The metadata of the reward
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserBasicRewardActive: {
            /** @description The reward */
            reward: components["schemas"]["BasicReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        CreditReward: {
            /**
             * @description The key of the reward
             * @example credit-reward
             */
            key: string;
            /**
             * @description The credits of the reward
             * @example 100
             */
            credits: number;
            /**
             * @description The name of the reward
             * @example Credit Reward
             */
            name: string;
            /**
             * @description The description of the reward
             * @example This is a credit reward
             */
            description: string | null;
            /**
             * @description The metadata of the reward
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserCreditRewardActive: {
            /** @description The reward */
            reward: components["schemas"]["CreditReward"];
            /**
             * @description The amount of the reward
             * @example 100
             */
            credits: number;
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        OfferCodeReward: {
            /**
             * @description The key of the reward
             * @example offer-code-reward
             */
            key: string;
            /**
             * @description The offer code id
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            offer_code_id: string;
            /**
             * @description The offer code reference name that is set in the App Store Connect
             * @example Free Month
             */
            offer_code_ref_name: string;
            /**
             * @description The subscription product id of the offer code
             * @example com.winwinkit.monthly
             */
            subscription_product_id: string;
            /**
             * @description The name of the reward
             * @example Offer Code Reward
             */
            name: string;
            /**
             * @description The description of the reward
             * @example This is an offer code reward
             */
            description: string | null;
            /**
             * @description The metadata of the reward
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        OfferCodeValue: {
            /**
             * @description The offer code value
             * @example ABCDEFGHIJKLMNOPQR
             */
            value: string;
            /**
             * @description The offer code redeem link
             * @example https://apps.apple.com/redeem?ctx=offercodes&id=1234567890&code=ABCDEFGHIJKLMNOPQR
             */
            link: string;
            /**
             * Format: date-time
             * @description The offer code value expiration date
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string;
        };
        UserOfferCodeRewardActive: {
            /** @description The reward */
            reward: components["schemas"]["OfferCodeReward"];
            /** @description The offer code value */
            value: components["schemas"]["OfferCodeValue"] | null;
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        GooglePlayPromoCodeReward: {
            /**
             * @description The key of the reward
             * @example promo-code-reward
             */
            key: string;
            /**
             * @description The name of the reward
             * @example Promo Code Reward
             */
            name: string;
            /**
             * @description The description of the reward
             * @example This is a promo code reward
             */
            description: string | null;
            /**
             * @description The metadata of the reward
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        GooglePlayPromoCodeValue: {
            /**
             * @description The promo code value
             * @example ABCDEFGHIJKLMNOPQR
             */
            value: string;
            /**
             * Format: date-time
             * @description The promo code value expiration date
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string;
        };
        UserGooglePlayPromoCodeRewardActive: {
            /** @description The reward */
            reward: components["schemas"]["GooglePlayPromoCodeReward"];
            /** @description The promo code value */
            value: components["schemas"]["GooglePlayPromoCodeValue"] | null;
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        RevenueCatEntitlementReward: {
            /**
             * @description The key of the reward
             * @example premium-entitlement
             */
            key: string;
            /**
             * @description The entitlement ID of the reward
             * @example entl1234567890
             */
            entitlement_id: string;
            /**
             * @description The entitlement key of the reward
             * @example premium
             */
            entitlement_key: string;
            /**
             * @description The name of the reward
             * @example Premium Access
             */
            name: string;
            /**
             * @description The description of the reward
             * @example This is an RevenueCat entitlement reward
             */
            description: string | null;
            /**
             * @description The metadata of the reward
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserRevenueCatEntitlementRewardActive: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatEntitlementReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        RevenueCatOfferingReward: {
            /**
             * @description The key of the reward
             * @example discounted-offering
             */
            key: string;
            /**
             * @description The offering ID of the reward
             * @example ofrng1234567890
             */
            offering_id: string;
            /**
             * @description The offering key of the reward
             * @example discounted
             */
            offering_key: string;
            /**
             * @description The name of the reward
             * @example Discounted Offering
             */
            name: string;
            /**
             * @description The description of the reward
             * @example This is an RevenueCat offering reward
             */
            description: string | null;
            /**
             * @description The metadata of the reward
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserRevenueCatOfferingRewardActive: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatOfferingReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expires_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserRewardsActive: {
            /** @description The referral user basic rewards */
            basic: components["schemas"]["UserBasicRewardActive"][];
            /** @description The referral user credit rewards */
            credit: components["schemas"]["UserCreditRewardActive"][];
            /** @description The referral user offer code rewards */
            offer_code: components["schemas"]["UserOfferCodeRewardActive"][];
            /** @description The referral user Google Play promo code rewards */
            googleplay_promo_code: components["schemas"]["UserGooglePlayPromoCodeRewardActive"][];
            /** @description The referral user RevenueCat entitlement rewards */
            revenuecat_entitlement: components["schemas"]["UserRevenueCatEntitlementRewardActive"][];
            /** @description The referral user RevenueCat offering rewards */
            revenuecat_offering: components["schemas"]["UserRevenueCatOfferingRewardActive"][];
        };
        UserBasicRewardExpired: {
            /** @description The reward */
            reward: components["schemas"]["BasicReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expired_at: string;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserCreditRewardExpired: {
            /** @description The reward */
            reward: components["schemas"]["CreditReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expired_at: string;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserOfferCodeRewardExpired: {
            /** @description The reward */
            reward: components["schemas"]["OfferCodeReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expired_at: string;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserGooglePlayPromoCodeRewardExpired: {
            /** @description The reward */
            reward: components["schemas"]["GooglePlayPromoCodeReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expired_at: string;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserRevenueCatEntitlementRewardExpired: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatEntitlementReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expired_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserRevenueCatOfferingRewardExpired: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatOfferingReward"];
            /**
             * Format: date-time
             * @description The expiration date of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            expired_at: string | null;
            /**
             * Format: date-time
             * @description The created at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The updated at of the reward
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        UserRewardsExpired: {
            /** @description The referral user basic rewards */
            basic: components["schemas"]["UserBasicRewardExpired"][];
            /** @description The referral user credit rewards */
            credit: components["schemas"]["UserCreditRewardExpired"][];
            /** @description The referral user offer code rewards */
            offer_code: components["schemas"]["UserOfferCodeRewardExpired"][];
            /** @description The referral user Google Play promo code rewards */
            googleplay_promo_code: components["schemas"]["UserGooglePlayPromoCodeRewardExpired"][];
            /** @description The referral user RevenueCat entitlement rewards */
            revenuecat_entitlement: components["schemas"]["UserRevenueCatEntitlementRewardExpired"][];
            /** @description The referral user RevenueCat offering rewards */
            revenuecat_offering: components["schemas"]["UserRevenueCatOfferingRewardExpired"][];
        };
        UserRewards: {
            /** @description The referral user active rewards */
            active: components["schemas"]["UserRewardsActive"];
            /** @description The referral user expired rewards */
            expired: components["schemas"]["UserRewardsExpired"];
        };
        ReferralProgramSenderBasicRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramSenderBasicRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramSenderBasicRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
            /**
             * @description The amount of the activation configuration
             * @example 1
             */
            amount: number;
        };
        ReferralProgramSenderBasicReward: {
            /** @description The reward */
            reward: components["schemas"]["BasicReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramSenderBasicRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramSenderBasicRewardNeverDeactivation"] | components["schemas"]["ReferralProgramSenderBasicRewardIntervalDeactivation"];
        };
        ReferralProgramSenderCreditRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramSenderCreditRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramSenderCreditRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
            /**
             * @description The amount of the activation configuration
             * @example 1
             */
            amount: number;
            /**
             * @description The limit of the activation configuration
             * @example 1
             */
            limit: number;
        };
        ReferralProgramSenderCreditReward: {
            /** @description The reward */
            reward: components["schemas"]["CreditReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramSenderCreditRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramSenderCreditRewardNeverDeactivation"] | components["schemas"]["ReferralProgramSenderCreditRewardIntervalDeactivation"];
        };
        ReferralProgramSenderOfferCodeRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramSenderOfferCodeRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramSenderOfferCodeRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
            /**
             * @description The amount of the activation configuration
             * @example 1
             */
            amount: number;
            /**
             * @description The limit of the activation configuration
             * @example 1
             */
            limit: number;
        };
        ReferralProgramSenderOfferCodeReward: {
            /** @description The reward */
            reward: components["schemas"]["OfferCodeReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramSenderOfferCodeRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramSenderOfferCodeRewardNeverDeactivation"] | components["schemas"]["ReferralProgramSenderOfferCodeRewardIntervalDeactivation"];
        };
        ReferralProgramSenderGooglePlayPromoCodeRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramSenderGooglePlayPromoCodeRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramSenderGooglePlayPromoCodeRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
            /**
             * @description The amount of the activation configuration
             * @example 1
             */
            amount: number;
            /**
             * @description The limit of the activation configuration
             * @example 1
             */
            limit: number;
        };
        ReferralProgramSenderGooglePlayPromoCodeReward: {
            /** @description The reward */
            reward: components["schemas"]["GooglePlayPromoCodeReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramSenderGooglePlayPromoCodeRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramSenderGooglePlayPromoCodeRewardNeverDeactivation"] | components["schemas"]["ReferralProgramSenderGooglePlayPromoCodeRewardIntervalDeactivation"];
        };
        ReferralProgramSenderRevenueCatEntitlementRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramSenderRevenueCatEntitlementRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramSenderRevenueCatEntitlementRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
            /**
             * @description The amount of the activation configuration
             * @example 1
             */
            amount: number;
        };
        ReferralProgramSenderRevenueCatEntitlementReward: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatEntitlementReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramSenderRevenueCatEntitlementRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramSenderRevenueCatEntitlementRewardNeverDeactivation"] | components["schemas"]["ReferralProgramSenderRevenueCatEntitlementRewardIntervalDeactivation"];
        };
        ReferralProgramSenderRevenueCatOfferingRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramSenderRevenueCatOfferingRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramSenderRevenueCatOfferingRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
            /**
             * @description The amount of the activation configuration
             * @example 1
             */
            amount: number;
        };
        ReferralProgramSenderRevenueCatOfferingReward: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatOfferingReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramSenderRevenueCatOfferingRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramSenderRevenueCatOfferingRewardNeverDeactivation"] | components["schemas"]["ReferralProgramSenderRevenueCatOfferingRewardIntervalDeactivation"];
        };
        ReferralProgramSenderRewards: {
            /** @description The program basic rewards */
            basic: components["schemas"]["ReferralProgramSenderBasicReward"][];
            /** @description The program credit rewards */
            credit: components["schemas"]["ReferralProgramSenderCreditReward"][];
            /** @description The program offer code rewards */
            offer_code: components["schemas"]["ReferralProgramSenderOfferCodeReward"][];
            /** @description The program Google Play promo code rewards */
            googleplay_promo_code: components["schemas"]["ReferralProgramSenderGooglePlayPromoCodeReward"][];
            /** @description The program RevenueCat entitlement rewards */
            revenuecat_entitlement: components["schemas"]["ReferralProgramSenderRevenueCatEntitlementReward"][];
            /** @description The program RevenueCat offering rewards */
            revenuecat_offering: components["schemas"]["ReferralProgramSenderRevenueCatOfferingReward"][];
        };
        ReferralProgramReceiverBasicRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramReceiverBasicRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramReceiverBasicRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
        };
        ReferralProgramReceiverBasicReward: {
            /** @description The reward */
            reward: components["schemas"]["BasicReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramReceiverBasicRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramReceiverBasicRewardNeverDeactivation"] | components["schemas"]["ReferralProgramReceiverBasicRewardIntervalDeactivation"];
        };
        ReferralProgramReceiverCreditRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramReceiverCreditRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramReceiverCreditRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
        };
        ReferralProgramReceiverCreditReward: {
            /** @description The reward */
            reward: components["schemas"]["CreditReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramReceiverCreditRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramReceiverCreditRewardNeverDeactivation"] | components["schemas"]["ReferralProgramReceiverCreditRewardIntervalDeactivation"];
        };
        ReferralProgramReceiverOfferCodeRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramReceiverOfferCodeRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramReceiverOfferCodeRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim";
        };
        ReferralProgramReceiverOfferCodeReward: {
            /** @description The reward */
            reward: components["schemas"]["OfferCodeReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramReceiverOfferCodeRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramReceiverOfferCodeRewardNeverDeactivation"] | components["schemas"]["ReferralProgramReceiverOfferCodeRewardIntervalDeactivation"];
        };
        ReferralProgramReceiverGooglePlayPromoCodeRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramReceiverGooglePlayPromoCodeRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramReceiverGooglePlayPromoCodeRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim";
        };
        ReferralProgramReceiverGooglePlayPromoCodeReward: {
            /** @description The reward */
            reward: components["schemas"]["GooglePlayPromoCodeReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramReceiverGooglePlayPromoCodeRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramReceiverGooglePlayPromoCodeRewardNeverDeactivation"] | components["schemas"]["ReferralProgramReceiverGooglePlayPromoCodeRewardIntervalDeactivation"];
        };
        ReferralProgramReceiverRevenueCatEntitlementRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramReceiverRevenueCatEntitlementRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramReceiverRevenueCatEntitlementRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim" | "conversion";
        };
        ReferralProgramReceiverRevenueCatEntitlementReward: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatEntitlementReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramReceiverRevenueCatEntitlementRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramReceiverRevenueCatEntitlementRewardNeverDeactivation"] | components["schemas"]["ReferralProgramReceiverRevenueCatEntitlementRewardIntervalDeactivation"];
        };
        ReferralProgramReceiverRevenueCatOfferingRewardNeverDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example never
             * @enum {string}
             */
            variant: "never";
        };
        ReferralProgramReceiverRevenueCatOfferingRewardIntervalDeactivation: {
            /**
             * @description The variant of the deactivation configuration
             * @example interval
             * @enum {string}
             */
            variant: "interval";
            /**
             * @description The duration of the deactivation configuration
             * @example 1
             */
            duration: number;
            /**
             * @description The period of the deactivation configuration
             * @example days
             * @enum {string}
             */
            period: "days" | "months" | "years";
        };
        ReferralProgramReceiverRevenueCatOfferingRewardActivation: {
            /**
             * @description The variant of the activation configuration
             * @example claim
             * @enum {string}
             */
            variant: "claim";
        };
        ReferralProgramReceiverRevenueCatOfferingReward: {
            /** @description The reward */
            reward: components["schemas"]["RevenueCatOfferingReward"];
            /** @description The activation configuration */
            activation: components["schemas"]["ReferralProgramReceiverRevenueCatOfferingRewardActivation"];
            /**
             * @description The deactivation configuration
             * @example {
             *       "variant": "never"
             *     }
             */
            deactivation: components["schemas"]["ReferralProgramReceiverRevenueCatOfferingRewardNeverDeactivation"] | components["schemas"]["ReferralProgramReceiverRevenueCatOfferingRewardIntervalDeactivation"];
        };
        ReferralProgramReceiverRewards: {
            /** @description The program basic rewards */
            basic: components["schemas"]["ReferralProgramReceiverBasicReward"][];
            /** @description The program credit rewards */
            credit: components["schemas"]["ReferralProgramReceiverCreditReward"][];
            /** @description The program offer code rewards */
            offer_code: components["schemas"]["ReferralProgramReceiverOfferCodeReward"][];
            /** @description The program Google Play promo code rewards */
            googleplay_promo_code: components["schemas"]["ReferralProgramReceiverGooglePlayPromoCodeReward"][];
            /** @description The program RevenueCat entitlement rewards */
            revenuecat_entitlement: components["schemas"]["ReferralProgramReceiverRevenueCatEntitlementReward"][];
            /** @description The program RevenueCat offering rewards */
            revenuecat_offering: components["schemas"]["ReferralProgramReceiverRevenueCatOfferingReward"][];
        };
        ReferralProgramRewards: {
            /** @description The program sender rewards */
            sender: components["schemas"]["ReferralProgramSenderRewards"];
            /** @description The program receiver rewards */
            receiver: components["schemas"]["ReferralProgramReceiverRewards"];
        };
        ReferralProgram: {
            /**
             * @description The program id
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description The program name
             * @example Referral Program #1
             */
            name: string;
            /**
             * @description The program description
             * @example This is a referral program
             */
            description: string | null;
            /**
             * @description The program metadata
             * @example {}
             */
            metadata: Record<string, never>;
            /**
             * @description The program distribution percentage
             * @example 100
             */
            distribution_percentage: number;
            /**
             * @description The program limit
             * @example 0
             */
            limit: number;
            /** @description The program rewards */
            rewards: components["schemas"]["ReferralProgramRewards"];
            /**
             * Format: date-time
             * @description The program created at
             * @example 2021-01-01T00:00:00.000Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description The program updated at
             * @example 2021-01-01T00:00:00.000Z
             */
            updated_at: string | null;
        };
        User: {
            /**
             * @description The unique identifier of the user in your app.
             * @example 821fae4b5-1a2d-4c1e-9152-5297086a161c
             */
            app_user_id: string;
            /**
             * @description The referral code of the user.
             * @example XYZ123
             */
            referral_code: string | null;
            /**
             * @description The referral code link of the user.
             * @example https://appname.wwk.link/XYZ123
             */
            referral_code_link: string | null;
            /**
             * @description Whether the user is a trial user.
             * @example false
             */
            is_trial: boolean | null;
            /**
             * @description Whether the user is a premium user.
             * @example false
             */
            is_premium: boolean | null;
            /**
             * Format: date-time
             * @description The date when the user was first seen at.
             * @example 2024-11-10T10:28:18.104Z
             */
            first_seen_at: string | null;
            /**
             * Format: date-time
             * @deprecated
             * @description The date when the user was last seen at. Deprecated, always returns null and will be removed in the future.
             * @example null
             */
            last_seen_at: string | null;
            /**
             * @description The metadata of the user.
             * @example {}
             */
            metadata: Record<string, never>;
            /** @description The claim code eligibility of the user. */
            claim_code_eligibility: components["schemas"]["UserClaimCodeEligibility"];
            /** @description The referred by object of the user. */
            referred_by: components["schemas"]["UserReferredBy"] | null;
            /** @description The stats of the user. */
            stats: components["schemas"]["UserStats"];
            /** @description The rewards of the user. */
            rewards: components["schemas"]["UserRewards"];
            /** @description The program of the user. */
            referral_program: components["schemas"]["ReferralProgram"] | null;
        };
        UserResponseData: {
            /** @description The user */
            user: components["schemas"]["User"];
        };
        UserResponse: {
            data: components["schemas"]["UserResponseData"];
        };
        UserWithdrawCreditsRequest: {
            /**
             * @description The key of the credit reward to withdraw
             * @example credit-reward
             */
            key: string;
            /**
             * @description The amount of credits to withdraw
             * @example 100
             */
            amount: number;
        };
        UserWithdrawCreditsResult: {
            /**
             * @description The amount of credits available at the start
             * @example 100
             */
            credits_available_at_start: number;
            /**
             * @description The amount of credits available at the end
             * @example 90
             */
            credits_available_at_end: number;
            /**
             * @description The amount of credits requested to withdraw
             * @example 10
             */
            credits_requested_to_withdraw: number;
            /**
             * @description The amount of credits withdrawn
             * @example 10
             */
            credits_withdrawn: number;
        };
        UserWithdrawCreditsResponseData: {
            /** @description The withdraw result */
            withdraw_result: components["schemas"]["UserWithdrawCreditsResult"];
            /** @description The user */
            user: components["schemas"]["User"];
        };
        UserWithdrawCreditsResponse: {
            data: components["schemas"]["UserWithdrawCreditsResponseData"];
        };
        UserGrantRewardRequest: {
            /**
             * @description The key of the reward to grant
             * @example discounted-offering
             */
            key: string;
        };
        UserRewardsGranted: {
            /** @description The referral user basic rewards */
            basic: components["schemas"]["UserBasicRewardActive"][];
            /** @description The referral user credit rewards */
            credit: components["schemas"]["UserCreditRewardActive"][];
            /** @description The referral user offer code rewards */
            offer_code: components["schemas"]["UserOfferCodeRewardActive"][];
            /** @description The referral user Google Play promo code rewards */
            googleplay_promo_code: components["schemas"]["UserGooglePlayPromoCodeRewardActive"][];
            /** @description The referral user RevenueCat entitlement rewards */
            revenuecat_entitlement: components["schemas"]["UserRevenueCatEntitlementRewardActive"][];
            /** @description The referral user RevenueCat offering rewards */
            revenuecat_offering: components["schemas"]["UserRevenueCatOfferingRewardActive"][];
        };
        UserGrantRewardResponseData: {
            /** @description The rewards granted to the user. */
            rewards_granted: components["schemas"]["UserRewardsGranted"];
            /** @description The updated user. */
            user: components["schemas"]["User"];
        };
        UserGrantRewardResponse: {
            data: components["schemas"]["UserGrantRewardResponseData"];
        };
        UserClaimCodeRequest: {
            /**
             * @description The code to claim. Can be affiliate, promo or referral code.
             * @example XYZ123
             */
            code: string;
        };
        UserClaimCodeResponseData: {
            /** @description The rewards granted to the user. */
            rewards_granted: components["schemas"]["UserRewardsGranted"];
            /** @description The updated user. */
            user: components["schemas"]["User"];
        };
        UserClaimCodeResponse: {
            data: components["schemas"]["UserClaimCodeResponseData"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getOfferCode: {
        parameters: {
            query?: never;
            header: {
                /** @description The API key to authenticate with. */
                "x-api-key": string;
            };
            path: {
                /** @description The offer code id to retrieve. */
                offer_code_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Offer Code response. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OfferCodeResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description Failed to fetch offer code because request to the App Store Connect API failed. */
            424: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
        };
    };
    createOrUpdateUser: {
        parameters: {
            query?: never;
            header: {
                /** @description The API key to authenticate with. */
                "x-api-key": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreateRequest"];
            };
        };
        responses: {
            /** @description The user has been successfully updated. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description The user has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description The request is invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The request is invalid. */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
        };
    };
    getUser: {
        parameters: {
            query?: never;
            header: {
                /** @description The API key to authenticate with. */
                "x-api-key": string;
            };
            path: {
                /** @description The app user id of the user to retrieve. */
                app_user_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The user has been successfully retrieved. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The user has not been found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
        };
    };
    withdrawCredits: {
        parameters: {
            query?: never;
            header: {
                /** @description The API key to authenticate with. */
                "x-api-key": string;
            };
            path: {
                /** @description The app user id of the user to withdraw credits from. */
                app_user_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserWithdrawCreditsRequest"];
            };
        };
        responses: {
            /** @description The result of the withdrawal of credits */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithdrawCreditsResponse"];
                };
            };
            /** @description The request is invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The user has not been found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The request is invalid. */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
        };
    };
    grantReward: {
        parameters: {
            query?: never;
            header: {
                /** @description The secret API key. */
                "x-api-key": string;
            };
            path: {
                /** @description The app user id of the user to grant a reward to. */
                app_user_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserGrantRewardRequest"];
            };
        };
        responses: {
            /** @description The reward has been already available for the user and cannot be granted again. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserGrantRewardResponse"];
                };
            };
            /** @description The reward has been successfully granted. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserGrantRewardResponse"];
                };
            };
            /** @description The request is invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The user has not been found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The request is invalid. */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
        };
    };
    claimCode: {
        parameters: {
            query?: never;
            header: {
                /** @description The API key to authenticate with. */
                "x-api-key": string;
            };
            path: {
                /** @description The app user id of the user to claim the code for. */
                app_user_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserClaimCodeRequest"];
            };
        };
        responses: {
            /** @description Updated user and granted rewards. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserClaimCodeResponse"];
                };
            };
            /** @description The request is invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The user has not been found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
            /** @description The request is invalid. */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorsResponse"];
                };
            };
        };
    };
}
