/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/referral/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new referral user
         * @description Creates a new referral user in the database.
         */
        post: operations["createReferralUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/referral/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the referral user by id
         * @description Returns the referral user by id.
         */
        get: operations["getReferralUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Create a new referral user. */
        ReferralUserCreate: {
            /**
             * @description Unique identifier the user in your app.
             * @example 8dfae4b5-1a2d-4c1e-9152-5297086a161c
             */
            app_user_id: string;
            /**
             * @description Is the user premium.
             * @example true
             */
            is_premium?: boolean | null;
            /**
             * @description Date when the user was first seen at.
             * @example 2020-11-20T08:47:11.782+00:00
             */
            first_seen_at?: string | null;
            /**
             * @description Date when the user was last seen at.
             * @example 2020-11-20T08:47:11.782+00:00
             */
            last_seen_at?: string | null;
            /**
             * @description Metadata object.
             * @example {"key": "value"}
             */
            metadata?: Record<string, never> | unknown[] | null;
        };
        /** @description Update a referral user with new properties. */
        ReferralUserUpdate: {
            /**
             * @description Is the user premium.
             * @example true
             */
            is_premium?: boolean | null;
            /**
             * @description Date when the user was first seen at.
             * @example 2020-11-20T08:47:11.782+00:00
             */
            first_seen_at?: string;
            /**
             * @description Date when the user was last seen at.
             * @example 2020-11-20T08:47:11.782+00:00
             */
            last_seen_at?: string;
            /**
             * @description Metadata object.
             * @example {"key": "value"}
             */
            metadata?: Record<string, never> | unknown[] | null;
        };
        /** @description Register a new push token for a referral user. */
        RegisterReferralUserPushToken: {
            /**
             * @description Device identifier where the push token was received.
             * @example 0dfae4b5-1a2d-4c1e-9152-5297086a161c
             */
            device_id: string;
            /**
             * @description Push token value.
             * @example 0dfae4b5-1a2d-4c1e-9152-5297086a161c
             */
            token: string;
            /**
             * @description Push token type. Must be 'apns' or 'fcm'.
             * @example apns
             */
            token_type: string;
        };
        /** @description Unregister push token for a referral user. */
        UnregisterReferralUserPushToken: {
            /**
             * @description Device identifier where the push token was received.
             * @example 0dfae4b5-1a2d-4c1e-9152-5297086a161c
             */
            device_id: string;
        };
        /** @description Create a new referral user. */
        ReferralUser: {
            id: components["schemas"]["ReferralUserId"];
            /**
             * @description Unique identifier the user in your app.
             * @example 8dfae4b5-1a2d-4c1e-9152-5297086a161c
             */
            app_user_id: string;
            /**
             * @description Is the user premium.
             * @example true
             */
            is_premium?: boolean | null;
            /**
             * @description Date when the user was first seen at.
             * @example 2020-11-20T08:47:11.782+00:00
             */
            first_seen_at?: string | null;
            /**
             * @description Date when the user was last seen at.
             * @example 2020-11-20T08:47:11.782+00:00
             */
            last_seen_at?: string | null;
            /**
             * @description Metadata object.
             * @example {"key": "value"}
             */
            metadata?: Record<string, never> | unknown[] | null;
        };
        /**
         * @description The unique identifier of the referral user.
         * @example
         */
        ReferralUserId: string;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    createReferralUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The referral user to create. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ReferralUserCreate"];
            };
        };
        responses: {
            /** @description The referral user was created successfully. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReferralUser"];
                };
            };
        };
    };
    getReferralUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The referral user. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReferralUser"];
                };
            };
        };
    };
}
